@model Trial.ViewModels.DepartmentViewModel
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{

}

<h3 class="mb-2">@Model.DepartmentName Bölümü Ders Programı</h3>

<table class="table table-bordered text-center w-100 h-auto">
        <thead class="bg-info bg-gradient">
        <tr>
            <th scope="col">#</th>
            @for(int i=0; i < Model.columnCount ; i++)
            {
            <th>
                @{if(i==0){
                    <span>Pazartesi</span>
                }
                if(i==1){
                    <span>Salı</span>
                }
                if(i==2){
                    <span>Çarşamba</span>
                }
                if(i==3){
                    <span>Perşembe</span>
                }
                if(i==4){
                    <span>Cuma</span>
                }
                if(i==5){
                    <span>Cumartesi</span>
                }
                if(i==6){
                    <span>Pazar</span>
                }
                }
            </th>
             }
        </tr>
        </thead>
        <tbody>

            @for(int i=0 ;i< Model.rowCount;i++)
                        {
                            <tr>
                                <th>
                                        @Model.TimeSlots.ElementAt(i).Slot
                                </th>
                                @for (var j = 0; j < Model.columnCount; j++)
                                {
                                        <td class="pb-2 align-bottom">
                        @{
                            int slotId = Model.TimeSlots.ElementAt((j * Model.rowCount) + i).Id;
                            List<int> semesterList = new List<int>();
                        }

                        <div id="" class="d-block text-center departmentScheduleCell" > 
                            @for(int k =0; k < Model.DepartmentClassScheduleList.Count(); k++)
                            {
                                
                                if(Model.DepartmentClassScheduleList.ElementAt(k).timeSlotId == slotId)
                                {
                                    
                                    <div class="vr"></div>  <strong class="" style="font-size:1rem;">@Model.DepartmentClassScheduleList.ElementAt(k).courseCode</strong> <em style="font-size:small">@Model.DepartmentClassScheduleList.ElementAt(k).classroomCode</em> <small>@Model.DepartmentClassScheduleList.ElementAt(k).semesterCount</small> <br> <hr class="opacity-25"/>
                                    if (semesterList.Contains(Model.DepartmentClassScheduleList.ElementAt(k).semesterCount))
                                    {
                                        <input type="hidden" onload="lectureConflictFunction(this.value);" value="@Model.DepartmentClassScheduleList.ElementAt(k).courseName"/>
                                    }
                                    semesterList.Add(Model.DepartmentClassScheduleList.ElementAt(k).semesterCount);
                                    
                                }


                            }
                            
                            </div>
                                    </td>
                                }
                            </tr>
                        }


        <!--<tr>
            <th></th>
            <td class="py-5 bg-info bg-gradient bg-opacity-75">
                <div style="border: none" >
                    <p class="text-white">Lecture Code</p>
                    <small class="text-white opacity-75">Class-Block</small>
                </div>
            </td>
              <td class="pb-2 align-bottom"><div class="d-block badge bg-info" >Available</div></td>
              <td class="*"><div class="d-block badge bg-dark" >Not Available</div></td>
              <td class="pb-2 align-bottom bg-dark bg-gradient"><div class="d-block badge bg-dark" >Not Available</div></td>
              <td class="pb-2 align-bottom bg-dark bg-gradient"><div class="d-block badge bg-dark" >Not Available</div></td>
        </tr>
        <tr>
            <th>TimeSlot2</th>
            <td class="py-5 bg-info bg-gradient bg-opacity-75">
                <div style="border: none" >
                    <p class="text-white">Lecture Code</p>
                    <small class="text-white opacity-75">Class-Block</small>
                </div>
            </td>
              <td class="pb-2 align-bottom"><div class="d-block badge bg-info" ></div></td>
              <td class="pb-2 align-bottom bg-dark bg-gradient"><div class="d-block badge bg-dark" >Not Available</div></td>
              <td class="pb-2 align-bottom bg-dark bg-gradient"><div class="d-block badge bg-dark" >Not Available</div></td>
              <td class="pb-2 align-bottom bg-dark bg-gradient"><div class="d-block badge bg-dark" >Not Available</div></td>
        </tr>
        <tr>
            <th>TimeSlot3</th>
            <td class="py-5 bg-info bg-gradient bg-opacity-75">
                <div style="border: none" >
                    <p class="text-white">Lecture Code</p>
                    <small class="text-white opacity-75">Class-Block</small>
                </div>
            </td>
              <td class="pb-2 align-bottom"><div class="d-block badge bg-info" >White Box</div></td>
              <td class="pb-2 align-bottom bg-dark bg-gradient"><div class="d-block badge bg-info" >Tolga Titiz</div></td>
              <td class="pb-2 align-bottom bg-dark bg-gradient"><div class="d-block badge bg-info" >Info</div></td>
              <td class="pb-2 align-bottom bg-dark bg-gradient"><div class="d-block badge bg-dark" >Dark Box</div></td>
        </tr>!-->
        </tbody>
        </table>